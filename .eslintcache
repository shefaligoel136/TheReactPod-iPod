[{"C:\\Users\\goel1\\react\\ipodpractice\\src\\index.js":"1","C:\\Users\\goel1\\react\\ipodpractice\\src\\App.js":"2","C:\\Users\\goel1\\react\\ipodpractice\\src\\Ipod.js":"3","C:\\Users\\goel1\\react\\ipodpractice\\src\\components\\Screen.js":"4","C:\\Users\\goel1\\react\\ipodpractice\\src\\components\\Touchpad.js":"5","C:\\Users\\goel1\\react\\ipodpractice\\src\\components\\Settings.js":"6","C:\\Users\\goel1\\react\\ipodpractice\\src\\components\\Games.js":"7","C:\\Users\\goel1\\react\\ipodpractice\\src\\components\\Music.js":"8","C:\\Users\\goel1\\react\\ipodpractice\\src\\components\\Home.js":"9","C:\\Users\\goel1\\react\\ipodpractice\\src\\components\\Buttons.js":"10","C:\\Users\\goel1\\react\\ipodpractice\\src\\components\\MySongs.js":"11","C:\\Users\\goel1\\react\\ipodpractice\\src\\components\\AllSongs.js":"12"},{"size":432,"mtime":1612337238959,"results":"13","hashOfConfig":"14"},{"size":159,"mtime":1612196258757,"results":"15","hashOfConfig":"14"},{"size":1078,"mtime":1612516940605,"results":"16","hashOfConfig":"14"},{"size":2841,"mtime":1612516326374,"results":"17","hashOfConfig":"14"},{"size":8144,"mtime":1612517843550,"results":"18","hashOfConfig":"14"},{"size":1741,"mtime":1612516382451,"results":"19","hashOfConfig":"14"},{"size":1648,"mtime":1612516070989,"results":"20","hashOfConfig":"14"},{"size":1470,"mtime":1612516218579,"results":"21","hashOfConfig":"14"},{"size":1404,"mtime":1612516044936,"results":"22","hashOfConfig":"14"},{"size":866,"mtime":1612515809689,"results":"23","hashOfConfig":"14"},{"size":1796,"mtime":1612516248135,"results":"24","hashOfConfig":"14"},{"size":1632,"mtime":1612515758849,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"y9wnkm",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\goel1\\react\\ipodpractice\\src\\index.js",[],["53","54"],"C:\\Users\\goel1\\react\\ipodpractice\\src\\App.js",[],"C:\\Users\\goel1\\react\\ipodpractice\\src\\Ipod.js",[],"C:\\Users\\goel1\\react\\ipodpractice\\src\\components\\Screen.js",[],"C:\\Users\\goel1\\react\\ipodpractice\\src\\components\\Touchpad.js",["55"],"import React from 'react';\r\nimport Screen from './Screen';\r\nimport './CommonCss.css';\r\nimport $ from 'jquery';\r\nimport Buttons from './Buttons';\r\nimport ZingTouch from 'zingtouch';\r\n\r\n\r\n// this is the main component and handles all the working\r\nclass Touchpad extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n           onWhat : \"home\", // onwhat tells that- on which component on the touch pad we are hovering on\r\n           pressed : \" \" ,    // pressed tells that- on which component on the main or sub menu we want to go on\r\n           menu: false  // if he user presses menu at the first time when he sees the ipod, nothing should happen\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        \r\n        var touchArea = document.getElementById('touch-wheel');\r\n        var myRegion = new ZingTouch.Region(touchArea);\r\n        const context=this;\r\n        \r\n        // form here the zingtouch function starts\r\n            myRegion.bind(touchArea, 'rotate', function(e){\r\n                if(document.getElementsByClassName(\"screen-menu\")[0].classList.contains(\"has-menu\")){ // this zingtouch will work only if the main-menu is visible on screen\r\n                let distance = e.detail.angle; // tells the angle on which the mouse is hovering\r\n                \r\n                if(distance>0 && distance<90){\r\n                    context.setState({\r\n                        onWhat : \"home\"\r\n                    })\r\n                    // to show hovering this jquery is used\r\n                    $(\"#settings, #music, #games\").removeClass('selected')\r\n                    $('#'+context.state.onWhat).addClass('selected');\r\n\r\n                    // console.log(context.state.onWhat);\r\n\r\n                }else if(distance>90 && distance<180){\r\n                    context.setState({\r\n                        onWhat : \"settings\"\r\n                    })\r\n                    // to show hovering this jquery is used\r\n                    $(\"#home, #music, #games\").removeClass('selected')\r\n                    $('#'+context.state.onWhat).addClass('selected');\r\n                    // console.log(context.state.onWhat);\r\n                }\r\n                else if(distance>180 && distance<240){\r\n                    context.setState({\r\n                        onWhat : \"games\"\r\n                    })\r\n                    // to show hovering this jquery is used\r\n                    $(\"#home, #settings, #music\").removeClass('selected')\r\n                    $('#'+context.state.onWhat).addClass('selected');\r\n                    // console.log(context.state.onWhat);\r\n\r\n                }else if(distance>240 && distance < 360){\r\n                    context.setState({\r\n                        onWhat : \"music\"\r\n                    })\r\n                    // to show hovering this jquery is used\r\n                    $(\"#home, #games, #settings\").removeClass('selected')\r\n                    $('#'+context.state.onWhat).addClass('selected');\r\n                    // console.log(context.state.onWhat);\r\n                }   \r\n            }else if(document.getElementsByClassName(\"has-menu-songs\")[0].classList.contains(\"has-menu\")){ // this zingtouch will work only if the sub-song-menu is visible on screen\r\n                    let distance = e.detail.angle;\r\n                    \r\n                    if(distance>0 && distance<180){\r\n                        context.setState({\r\n                            onWhat : \"allSongs\"\r\n                        })\r\n                        // to show hovering this jquery is used\r\n                        $(\"#myAlbum\").removeClass('selected')\r\n                        $('#'+context.state.onWhat).addClass('selected');\r\n\r\n                        // console.log(context.state.onWhat);\r\n                    }else if(distance>180 && distance<360){\r\n                        context.setState({\r\n                            onWhat : \"myAlbum\"\r\n                        })\r\n                        // to show hovering this jquery is used\r\n                        $(\"#allSongs\").removeClass('selected')\r\n                        $('#'+context.state.onWhat).addClass('selected');\r\n                        // console.log(context.state.onWhat);\r\n                    }\r\n                } \r\n            }\r\n        );\r\n }\r\n\r\n // this function is called when the user selects an option and want to go into it \r\n    onPress = () =>{\r\n        this.setState({\r\n            pressed : this.state.onWhat,\r\n            menu : true\r\n        })\r\n\r\n        // if the user is on the page and opens the menu and click for the option - which is on his screen already, the menu option will hide\r\n        // and touch pad will be disabled again\r\n        if(this.state.onWhat == this.state.pressed){\r\n            $('.screen-menu').hide(\"slide\", {direction: \"left\" }, 1000);\r\n            $('.screen-menu').removeClass('has-menu');\r\n        }\r\n        // console.log(this.state.pressed == 'music')\r\n        // if user is on music screen, open the menu again then first he'll see the sub song menu.\r\n        if(this.state.pressed === \"music\" && this.state.onWhat === this.state.pressed){\r\n            $(\".has-menu-songs\").show(\"slide\", {direction: \"right\" }, 1500);\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n\r\n    // menu button is to look for other menu options.\r\n    menuButtonClicked = () =>{\r\n        // $(\".has-menu-songs\").hide(\"slide\", {direction: \"right\" }, 1000)\r\n\r\n        // if(document.getElementById(\"music\").classList.contains(\"selected\")){\r\n        //     $(\".has-menu-songs\").show(\"slide\", {direction: \"right\" }, 1000)\r\n        // }else{\r\n        //     $(\".has-menu-songs\").hide(\"slide\", {direction: \"right\" }, 1000)\r\n        // }\r\n        if(! this.state.menu === false){\r\n        let screenMenuList = document.getElementsByClassName(\"screen-menu\")[0].classList\r\n        if(!screenMenuList.contains(\"has-menu\")){\r\n             $('.screen-menu').addClass('has-menu');\r\n             $('.screen-menu').show(\"slide\", {direction: \"left\" }, 1000)\r\n        }   \r\n        else{\r\n            $('.screen-menu').removeClass('has-menu');\r\n            $('.screen-menu').hide(\"slide\", {direction: \"left\" }, 1000)\r\n        }\r\n        let songMenuList = document.getElementsByClassName(\"has-menu-songs\")[0].classList\r\n        if(!songMenuList.contains(\"has-menu\")){\r\n             $('.has-menu-songs').addClass('has-menu');\r\n             $('.has-menu-songs').show(\"slide\", {direction: \"left\" }, 1000)\r\n        }   \r\n        else{\r\n            $('.has-menu-songs').removeClass('has-menu');\r\n            $('.has-menu-songs').hide(\"slide\", {direction: \"left\" }, 1000)\r\n        }\r\n    }\r\n         \r\n}\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                < Screen \r\n                    selectedOption={this.state.pressed}\r\n                    selectedMusicOption = {this.state.pressed}\r\n                />     \r\n                <div className = \"areaNeeded-1\" >\r\n                        <div id=\"touch-wheel\" style={styles.wheel}>\r\n                            <Buttons\r\n                                menuButtonClicked={this.menuButtonClicked}\r\n                            />\r\n                            <div id = \"ok-button\" style={styles.wheelOnClick}  onClick = {this.onPress}>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n// css for pouchpad and press button.\r\nconst styles = {\r\n    wheel : {\r\n        borderRadius: \"100%\",\r\n        // border: \"1px solid black\",\r\n        width: \"250px\",\r\n        height: \"220px\",\r\n        margin: \"12%\",\r\n        marginLeft: \"10%\",\r\n        marginTop: \"12%\",\r\n        backgroundColor: \"white\",\r\n        boxShadow: \"inset 0 0 0.1em #555\",\r\n    },\r\n\r\n    wheelOnClick : {\r\n        borderRadius : \"100%\" ,\r\n        boxShadow: \"inset 0 0 0.7em #555\",\r\n        background: \"linear-gradient(180deg, #e3e3e3 0%, #d6d6d6 100%)\",\r\n        height: \"100px\",\r\n        width : \"100px\",\r\n        left:\"76px\",\r\n        bottom: \"11.5%\",\r\n        color: \"white\",\r\n        position:\"relative\",\r\n        cursor: \"pointer\"\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Touchpad;","C:\\Users\\goel1\\react\\ipodpractice\\src\\components\\Settings.js",[],"C:\\Users\\goel1\\react\\ipodpractice\\src\\components\\Games.js",[],"C:\\Users\\goel1\\react\\ipodpractice\\src\\components\\Music.js",[],"C:\\Users\\goel1\\react\\ipodpractice\\src\\components\\Home.js",[],"C:\\Users\\goel1\\react\\ipodpractice\\src\\components\\Buttons.js",[],"C:\\Users\\goel1\\react\\ipodpractice\\src\\components\\MySongs.js",[],"C:\\Users\\goel1\\react\\ipodpractice\\src\\components\\AllSongs.js",[],["56","57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":106,"column":30,"nodeType":"64","messageId":"65","endLine":106,"endColumn":32},{"ruleId":"58","replacedBy":"66"},{"ruleId":"60","replacedBy":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["68"],["69"],"no-global-assign","no-unsafe-negation"]